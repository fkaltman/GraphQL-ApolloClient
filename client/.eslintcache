[{"/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/index.js":"1","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/reportWebVitals.js":"2","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/App.js":"3","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/Components/GetUsers.js":"4","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/Components/Form.js":"5","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/GraphQL/Mutations.js":"6","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/GraphQL/Queries.js":"7"},{"size":478,"mtime":1759769150975,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1759769150975,"results":"10","hashOfConfig":"9"},{"size":814,"mtime":1759771590719,"results":"11","hashOfConfig":"9"},{"size":527,"mtime":1759769150975,"results":"12","hashOfConfig":"9"},{"size":2531,"mtime":1759788230000,"results":"13","hashOfConfig":"9"},{"size":344,"mtime":1759769150975,"results":"14","hashOfConfig":"9"},{"size":163,"mtime":1759769150975,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3hkh6a",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/index.js",[],["34","35"],"/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/reportWebVitals.js",[],"/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/App.js",["36","37"],"import \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport GetUsers from \"./Components/GetUsers\";\nimport Form from \"./Components/Form\";\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:4000/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {\" \"}\n      {/* <GetUsers /> */}\n      <Form />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/Components/GetUsers.js",["38","39","40","41"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_USERS } from \"../GraphQL/Queries\";\n\nfunction GetUsers() {\n  const { error, loading, data } = useQuery(LOAD_USERS);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllUsers);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      {/* {\" \"}\n      {users.map((val) => {\n        return <h1> {val.firstName}</h1>;\n      })} */}\n    </div>\n  );\n}\n\nexport default GetUsers;\n","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/Components/Form.js",["42"],"import React, { useState } from \"react\";\nimport { CREATE_USER_MUTATION } from \"../GraphQL/Mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nfunction Form() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const [createUser, { loading, error, data }] =\n    useMutation(CREATE_USER_MUTATION);\n\n  const addUser = async () => {\n    // Clear any previous success message\n    setSuccessMessage(\"\");\n\n    try {\n      const result = await createUser({\n        variables: {\n          firstName,\n          lastName,\n          email,\n          password,\n        },\n      });\n\n      // If we get here, the mutation succeeded\n      if (result.data) {\n        // Clear all form fields\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n\n        // Show success message\n        setSuccessMessage(\"User created successfully!\");\n\n        // Hide success message after 3 seconds\n        setTimeout(() => setSuccessMessage(\"\"), 3000);\n      }\n    } catch (err) {\n      // Error is handled automatically by Apollo and available in the `error` variable\n      console.log(\"Failed to create user:\", err);\n    }\n  };\n  return (\n    <div>\n      {/* Success Message */}\n      {successMessage && (\n        <div\n          style={{ color: \"green\", marginBottom: \"10px\", fontWeight: \"bold\" }}\n        >\n          {successMessage}\n        </div>\n      )}\n\n      {/* Error Message */}\n      {error && (\n        <div style={{ color: \"red\", marginBottom: \"10px\", fontWeight: \"bold\" }}>\n          Error: {error.message}\n        </div>\n      )}\n\n      <input\n        type=\"text\"\n        placeholder=\"First Name\"\n        onChange={(e) => {\n          setFirstName(e.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Last Name\"\n        onChange={(e) => {\n          setLastName(e.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Email\"\n        onChange={(e) => {\n          setEmail(e.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Password\"\n        onChange={(e) => {\n          setPassword(e.target.value);\n        }}\n      />\n      <button onClick={addUser} disabled={loading}>\n        {loading ? \"Creating User...\" : \"Create User\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Form;\n","/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/GraphQL/Mutations.js",[],"/Users/francinekline/Desktop/code_reps/GraphQL-ApolloClient-Template/client/src/GraphQL/Queries.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":10,"column":8,"nodeType":"49","messageId":"50","endLine":10,"endColumn":16},{"ruleId":"51","severity":1,"message":"52","line":15,"column":53,"nodeType":"53","messageId":"54","endLine":15,"endColumn":55},{"ruleId":"47","severity":1,"message":"55","line":2,"column":20,"nodeType":"49","messageId":"50","endLine":2,"endColumn":23},{"ruleId":"47","severity":1,"message":"56","line":6,"column":11,"nodeType":"49","messageId":"50","endLine":6,"endColumn":16},{"ruleId":"47","severity":1,"message":"57","line":6,"column":18,"nodeType":"49","messageId":"50","endLine":6,"endColumn":25},{"ruleId":"47","severity":1,"message":"58","line":7,"column":10,"nodeType":"49","messageId":"50","endLine":7,"endColumn":15},{"ruleId":"47","severity":1,"message":"59","line":12,"column":40,"nodeType":"49","messageId":"50","endLine":12,"endColumn":44},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'GetUsers' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'gql' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'users' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]